"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hrController = void 0;
const CreateEmployeeUsecase_1 = require("@application/use-cases/Hr/CreateEmployeeUsecase");
const CreateTeamUseCase_1 = require("@application/use-cases/Hr/CreateTeamUseCase");
const GetAllEmployeeUsecase_1 = require("@application/use-cases/Hr/GetAllEmployeeUsecase");
const GetAllTeamsUsecase_1 = require("@application/use-cases/Hr/GetAllTeamsUsecase");
const GetHrUsecase_1 = require("@application/use-cases/Hr/GetHrUsecase");
const HrLoginUsecase_1 = require("@application/use-cases/Hr/HrLoginUsecase");
const VerifyOtpUsecase_1 = require("@application/use-cases/Hr/VerifyOtpUsecase");
const HrController_1 = require("@frameworks/controllers/HrController");
const SequelizeHrRepository_1 = require("@infrastructure/repository/SequelizeHrRepository");
const SequelizeTeamRepository_1 = require("@infrastructure/repository/SequelizeTeamRepository");
const generateToken_1 = __importDefault(require("@infrastructure/services/generateToken"));
const nodeMailer_1 = __importDefault(require("@infrastructure/services/nodeMailer"));
const otpManager_1 = require("@infrastructure/services/otpManager");
const generateToken = new generateToken_1.default();
const otpManager = new otpManager_1.OtpManager();
const nodeMailer = new nodeMailer_1.default();
const sequelizeHrRepository = new SequelizeHrRepository_1.SequelizeHrRepository();
const sequelizeTeamRepository = new SequelizeTeamRepository_1.SequelizeTeamRepository();
const hrLoginUsecase = new HrLoginUsecase_1.HrLoginUsecase(sequelizeHrRepository, otpManager, nodeMailer);
const hrVerifyOtpUsecase = new VerifyOtpUsecase_1.VerifyOtpUsecase(sequelizeHrRepository, generateToken, otpManager);
const getHrUsecase = new GetHrUsecase_1.GetHrUsecase(sequelizeHrRepository);
const createEmployeeUsecase = new CreateEmployeeUsecase_1.CreateEmployeeUsecase(sequelizeHrRepository, generateToken, nodeMailer);
const getAllEmployeesUsecase = new GetAllEmployeeUsecase_1.GetAllEmployeesUsecase(sequelizeHrRepository);
const getAllTeamsUsecase = new GetAllTeamsUsecase_1.GetAllTeamsUsecase(sequelizeTeamRepository);
const createTeamUsecase = new CreateTeamUseCase_1.CreateTeamUsecase(sequelizeTeamRepository);
const hrController = new HrController_1.HrController(hrLoginUsecase, hrVerifyOtpUsecase, getHrUsecase, createEmployeeUsecase, getAllEmployeesUsecase, getAllTeamsUsecase, createTeamUsecase);
exports.hrController = hrController;
